'use client';
import { useState } from 'react';

const style = {
  container: {
    minHeight: '100vh',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    padding: '3rem 1rem',
    background: 'linear-gradient(to right, #34d399, #6ee7b7, #a7f3d0)', // Emerald 400 -> 300 -> 200 (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏•‡πà‡πÇ‡∏ó‡∏ô)
  },
  form: {
    backgroundColor: 'white',
    width: '100%',
    maxWidth: '48rem',
    padding: '2.5rem',
    borderRadius: '2rem',
    boxShadow: '0 10px 15px -3px rgba(52, 211, 153, 0.4), 0 4px 6px -2px rgba(52, 211, 153, 0.05)', // Emerald 400 shadow
  },
  heading: {
    fontSize: '2.5rem',
    fontWeight: '800',
    textAlign: 'center',
    color: '#065f46', // Emerald 900 (‡πÄ‡∏Ç‡πâ‡∏°)
    marginBottom: '0.75rem',
    textShadow: '0 1px 2px rgba(0,0,0,0.1)',
  },
  subtitle: {
    textAlign: 'center',
    color: '#166534', // Emerald 800
    marginBottom: '2rem',
    fontSize: '0.875rem',
  },
  gridContainer: {
    display: 'grid',
    gap: '1.5rem',
    gridTemplateColumns: 'repeat(auto-fit, minmax(15rem, 1fr))',
  },
  label: {
    display: 'block',
    fontWeight: '600',
    fontSize: '0.875rem',
    marginBottom: '0.25rem',
    color: '#14532d', // Emerald 800
  },
  input: {
    width: '100%',
    padding: '0.5rem 1rem',
    border: '1px solid #d1d5db',
    borderRadius: '0.5rem',
    fontSize: '1rem',
    outline: 'none',
    transition: 'box-shadow 0.2s ease',
  },
  textarea: {
    width: '100%',
    padding: '0.5rem 1rem',
    border: '1px solid #d1d5db',
    borderRadius: '0.5rem',
    fontSize: '1rem',
    outline: 'none',
    resize: 'vertical',
  },
  radioContainer: {
    display: 'flex',
    gap: '1.5rem',
    marginTop: '0.25rem',
  },
  radioLabel: {
    display: 'flex',
    alignItems: 'center',
    fontSize: '0.875rem',
    color: '#4b5563',
    cursor: 'pointer',
  },
  checkboxContainer: {
    marginTop: '1.5rem',
    display: 'flex',
    alignItems: 'center',
  },
  checkbox: {
    marginRight: '0.5rem',
    accentColor: '#10b981', // Emerald 500
    cursor: 'pointer',
  },
  submitButton: {
    marginTop: '2rem',
    width: '100%',
    padding: '0.75rem 0',
    background: 'linear-gradient(to right, #059669, #10b981)', // Emerald 600 -> Emerald 500
    color: 'white',
    fontWeight: 'bold',
    fontSize: '1.125rem',
    borderRadius: '1rem',
    boxShadow: '0 10px 15px -3px rgba(16, 185, 129, 0.7)', // Emerald 500 shadow
    cursor: 'pointer',
    transition: 'opacity 0.2s ease, box-shadow 0.2s ease',
    border: 'none',
  },
  submitButtonHover: {
    opacity: 0.9,
    boxShadow: '0 12px 20px -5px rgba(16, 185, 129, 0.9)',
  },
  submitButtonDisabled: {
    background: '#6ee7b7', // Emerald 300 ‡∏≠‡πà‡∏≠‡∏ô‡∏•‡∏á
    cursor: 'not-allowed',
    boxShadow: 'none',
    opacity: 0.6,
  },
};

export default function Register() {
  const [form, setForm] = useState({
    username: '',
    password: '',
    prefix: '',
    firstName: '',
    lastName: '',
    address: '',
    gender: '',
    birthdate: '',
    accepted: false,
  });

  const [btnHover, setBtnHover] = useState(false);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setForm({
      ...form,
      [name]: type === 'checkbox' ? checked : value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!form.accepted) return;
    alert('üéâ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
  };

  const isSubmitDisabled = !form.accepted;

  return (
    <div style={style.container}>
      <form onSubmit={handleSubmit} style={style.form}>
        <h1 style={style.heading}> ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h1>
        <p style={style.subtitle}>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>

        <div style={style.gridContainer}>
          <div>
            <label htmlFor="username" style={style.label}>üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</label>
            <input
              id="username"
              name="username"
              type="text"
              value={form.username}
              onChange={handleChange}
              placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
              style={style.input}
              required
            />
          </div>

          <div>
            <label htmlFor="password" style={style.label}>üîí ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <input
              id="password"
              name="password"
              type="password"
              value={form.password}
              onChange={handleChange}
              placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
              style={style.input}
              required
            />
          </div>

          <div>
            <label htmlFor="prefix" style={style.label}>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</label>
            <select
              id="prefix"
              name="prefix"
              value={form.prefix}
              onChange={handleChange}
              style={style.input}
              required
            >
              <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>
              <option value="‡∏ô‡∏≤‡∏¢">‡∏ô‡∏≤‡∏¢</option>
              <option value="‡∏ô‡∏≤‡∏á">‡∏ô‡∏≤‡∏á</option>
              <option value="‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
            </select>
          </div>

          <div>
            <label htmlFor="birthdate" style={style.label}>üéÇ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
            <input
              id="birthdate"
              name="birthdate"
              type="date"
              value={form.birthdate}
              onChange={handleChange}
              style={style.input}
              required
            />
          </div>

          <div>
            <label htmlFor="firstName" style={style.label}>‡∏ä‡∏∑‡πà‡∏≠</label>
            <input
              id="firstName"
              name="firstName"
              type="text"
              value={form.firstName}
              onChange={handleChange}
              placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á"
              style={style.input}
              required
            />
          </div>

          <div>
            <label htmlFor="lastName" style={style.label}>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
            <input
              id="lastName"
              name="lastName"
              type="text"
              value={form.lastName}
              onChange={handleChange}
              placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
              style={style.input}
              required
            />
          </div>
        </div>

        <div style={{ marginTop: '1.5rem' }}>
          <label htmlFor="address" style={style.label}>üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
          <textarea
            id="address"
            name="address"
            rows="3"
            value={form.address}
            onChange={handleChange}
            placeholder="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà / ‡πÅ‡∏Ç‡∏ß‡∏á / ‡πÄ‡∏Ç‡∏ï / ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
            style={style.textarea}
            required
          />
        </div>

        <div style={{ marginTop: '1.5rem' }}>
          <label style={style.label}>‡πÄ‡∏û‡∏®</label>
          <div style={style.radioContainer}>
            <label style={style.radioLabel}>
              <input
                type="radio"
                name="gender"
                value="‡∏ä‡∏≤‡∏¢"
                checked={form.gender === '‡∏ä‡∏≤‡∏¢'}
                onChange={handleChange}
                style={{ marginRight: '0.5rem' }}
                required
              />
              ‡∏ä‡∏≤‡∏¢
            </label>
            <label style={style.radioLabel}>
              <input
                type="radio"
                name="gender"
                value="‡∏´‡∏ç‡∏¥‡∏á"
                checked={form.gender === '‡∏´‡∏ç‡∏¥‡∏á'}
                onChange={handleChange}
                style={{ marginRight: '0.5rem' }}
              />
              ‡∏´‡∏ç‡∏¥‡∏á
            </label>
          </div>
        </div>

        <div style={style.checkboxContainer}>
          <input
            type="checkbox"
            name="accepted"
            checked={form.accepted}
            onChange={handleChange}
            style={style.checkbox}
            required
          />
          <label style={{ fontSize: '0.875rem', color: '#374151' }}>
            ‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á
          </label>
        </div>

        <button
          type="submit"
          style={{
            ...style.submitButton,
            ...(btnHover && !isSubmitDisabled ? style.submitButtonHover : {}),
            ...(isSubmitDisabled ? style.submitButtonDisabled : {}),
          }}
          onMouseEnter={() => setBtnHover(true)}
          onMouseLeave={() => setBtnHover(false)}
          disabled={isSubmitDisabled}
          title={isSubmitDisabled ? '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£' : ''}
        >
          ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
        </button>
      </form>
    </div>
  );
}
